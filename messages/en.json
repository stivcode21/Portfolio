{
  "HomePage": {
    "title": "Hello, I am",
    "paragraph": "Code is my language and creativity my tool. I am passionate about building digital experiences that not only work, but leave a mark. I enjoy every challenge as an opportunity to innovate, improve and learn. If you are looking for someone who combines technique and vision to grow a project, I am here. ¡On Fire!",
    "button-1": "Hire me",
    "button-2": "Download CV"
  },
  "Navbar": {
    "main": "main",
    "about": "about",
    "projects": "projects",
    "contact": "contact"
  },
  "About": {
    "title": "About me",
    "paragraph": "For over three years, my world revolved around engines, parts, and diagnosing mechanical problems. But one day I decided to take a different route: swap physical tools for lines of code. This is how my journey in web development began. Through perseverance and self-taught learning, I have explored multiple technologies, methodologies and structures, always with the conviction that the best way to learn is to face new challenges every day. The logic and problem solving that I developed in my previous profession have been key in this process, allowing me to approach each project with precision and creativity.",
    "skills": "Skills",
    "education": "Education",
    "certifications": "Certifications"
  },
  "Projects": {
    "title": "My Projects",
    "featured": "Featured",
    "starter": "Starter",
    "desing": "Desing",
    "btn": "See More"
  },
  "Email": {
    "title": "let's Connect",
    "paragraph": "¡Las grandes cosas comienzan con un simple saludo! Si eres un reclutador, un entusiasta de la tecnología o un socio creativo, me encantaría saber de ti. Exploremos cómo podemos hacer realidad ideas audaces juntos.",
    "youEmail": "Your email",
    "subject": "Subject",
    "message": "Message",
    "button": "Send Message"
  },
  "footer": {
    "text": "© 2024 StivCode. All rights reserved. This website and its content are protected under copyright law. Unauthorized use, reproduction, or distribution is strictly prohibited. For permissions or inquiries, please contact us directly."
  },
  "Projects-info": {
    "description": "Description",
    "objective": "Objective",
    "features": "Key features",
    "skills": "Skills",
    "challenge": "Challenges",
    "Project-UrbanShop": {
      "subtitle": "E-commerce for selling shoes and caps",
      "description": "Urban Shop is an online store designed for selling shoes and caps, featuring an attractive and dynamic interface. The main goal was to develop a fully functional e-commerce platform, providing a smooth and intuitive user experience.",
      "objective": "To create a functional and scalable e-commerce platform with an appealing design and an optimized user experience for future expansions.",
      "feature-one": "Add products to the cart with storage in localStorage.",
      "feature-two": "Increase and decrease product quantities.",
      "feature-Three": "Remove individual products.",
      "feature-four": "Empty the cart completely.",
      "feature-five": "Automatic total calculation at the bottom of the cart.",
      "feature-six": "Interactive slider to showcase a collection of caps.",
      "skill-one": "Managing global state with Redux Toolkit.",
      "skill-two": "Using localStorage for data persistence.",
      "skill-three": "Applying mathematical functions for cart calculations.",
      "skill-four": "Integrating slider libraries (@splidejs/react-splide).",
      "skill-five": "Working with JSON files to handle product data.",
      "challenge-one": "It was my first time using Redux Toolkit, which posed an initial challenge. However, through tutorials and documentation, I managed to understand its workflow and successfully apply it to manage the cart’s global state.",
      "challenge-two": "Upon reloading the page, the products disappeared. The solution was to store the cart state in localStorage, ensuring that the information remained intact after each reload."
    },
    "Project-Frameonix": {
      "subtitle": "Website for my library documentation",
      "description": "Frameonix is a web platform designed to document my component library, providing a detailed introduction, an installation and usage guide, contribution information, and specific documentation for each component available in the library. This website features a dynamic interface, route-based navigation, and an intuitive design to ensure an excellent user experience.",
      "objective": "Facilitate learning and usage of Frameonix, ensuring developers have a clear starting point and understand how to efficiently use each component in the library.",
      "feature-one": "Route management with react-router-dom for better navigation.",
      "feature-two": "Manual language switching using i18next.",
      "feature-three": "Responsive design with excellent presentation on all screen sizes.",
      "feature-four": "Screen section detection, showing the user's current location in an index.",
      "feature-five": "Interactive terminal component allowing easy content copying.",
      "skill-one": "Publishing a library on NPM.",
      "skill-two": "Complete structuring and componentization of a large project.",
      "skill-three": "Implementation of local translations with i18next.",
      "skill-four": "Managing routes in React using react-router-dom.",
      "skill-five": "Creating a design focused on user experience.",
      "skill-six": "Applying a unified color palette for visual consistency.",
      "challenge-one": "Due to the large number of sections, implementing a routing system was essential to keep the project organized and scalable.",
      "challenge-two": "Manually configuring multiple keys for each translation was tedious, but I managed to optimize it using i18next.",
      "challenge-three": "To visually indicate which section the user is in, I implemented IntersectionObserver, detecting the active container by ID and marking it in the navigation index. The result was a clearer and smoother user experience."
    },
    "Project-CineVerse": {
      "subtitle": "Interactive movie platform",
      "description": "Cineverse is a movie platform that consumes the TMDB API to retrieve updated information on the latest movies. Its dynamic design enables an interactive experience, featuring a main banner that displays a random movie on reload and filters to explore movies by category.",
      "objective": "Create an interactive movie platform that remains constantly updated through API consumption, providing a smooth and engaging navigation experience for users.",
      "feature-one": "Interactive main banner that changes randomly with each reload or selected category.",
      "feature-two": "Dynamic movie filters by category.",
      "feature-three": "Consumption of the TMDB API to obtain real-time information.",
      "feature-four": "Fully responsive design for a seamless experience on any device.",
      "skill-one": "Consumption of external APIs and request handling.",
      "skill-two": "Implementation of dynamic filters to enhance user experience.",
      "skill-three": "State management in React to control data and design changes.",
      "skill-four": "Expansion of React knowledge and optimization of data flow.",
      "challenge-one": "API consumption was a challenge as it was my first time working with an external API, but I managed to solve it thanks to a prior course.",
      "challenge-two": "Implementing the interactive banner was complex, as it needed to change randomly depending on the selected category. The solution was to manage states in React to dynamically update the displayed image and information."
    },
    "Project-WhatsappClone": {
      "subtitle": "Web frontend for WhatsApp Web cloning",
      "description": "WhatsApp Clone is a frontend web project developed in collaboration with six teammates, where we replicated and customized various sections of the official WhatsApp website. The main goal was to gain experience in teamwork and expand my knowledge using frameworks, as it was my first time working with them. Throughout the project, we implemented key functionalities and customized the user experience.",
      "objective": "To learn and improve teamwork skills while familiarizing myself with the use of frameworks and libraries such as React, Material UI, and Tailwind CSS, replicating the functionality and design of WhatsApp Web.",
      "feature-one": "Authentication routes.",
      "feature-two": "Functionality to create a user profile.",
      "feature-three": "Sending messages between users.",
      "feature-four": "Sending emojis using a dedicated library.",
      "feature-five": "Using the Material UI library for its components.",
      "feature-six": "Implementing a color theme with Tailwind CSS.",
      "feature-seven": "User status section.",
      "feature-eight": "Profile editing section.",
      "feature-nine": "Message filtering.",
      "skill-one": "Teamwork and collaborative project management.",
      "skill-two": "Communication skills, responsibility, equality, kindness, and active listening in meetings using the Scrum methodology.",
      "skill-three": "Handling routes and managing navigation in React.",
      "skill-four": "Using libraries like Material UI and Emojis to enhance the user experience.",
      "challenge-one": "Learning to handle routes was one of the biggest challenges, but my teammates helped me understand them quickly.",
      "challenge-two": "Managing hooks in React was a new skill I learned thanks to teamwork.",
      "challenge-three": "Using the Material UI library was a challenge, but we solved it by consulting the official documentation and applying the necessary components."
    },
    "Project-StivSound": {
      "subtitle": "Reproductor de música online con JavaScript puro",
      "description": "StivSound es un reproductor de música online que permite escuchar canciones predeterminadas con un diseño responsivo, adaptado para diferentes pantallas. Desarrollado completamente con JavaScript puro, este proyecto ofrece una experiencia de usuario fluida y dinámica, integrando funcionalidades esenciales para la reproducción de audio sin necesidad de recargar la página.",
      "objective": "Aprender a manejar, interactuar y controlar archivos de audio en una aplicación web mediante JavaScript, mejorar el manejo del DOM, y reforzar el uso de clases y funciones para estructurar mejor el código.",
      "feature-one": "Reproducción de canciones almacenadas en Firebase Storage.",
      "feature-two": "Opciones para avanzar y retroceder entre canciones.",
      "feature-three": "Funcionalidad para eliminar una canción de la lista.",
      "feature-four": "Botón de pausa y reanudación de la reproducción.",
      "feature-five": "Opción para reorganizar la lista de canciones aleatoriamente.",
      "feature-six": "Indicador de duración total de la canción y contador en tiempo real del progreso de reproducción.",
      "skill-one": "Mejor comprensión y manipulación del DOM con JavaScript.",
      "skill-two": "Manejo y control de archivos de audio en una web.",
      "skill-three": "Implementación de contadores de reproducción.",
      "skill-four": "Desarrollo de una interfaz responsive adaptable a diferentes dispositivos.",
      "skill-five": "Consumo de assets desde Firebase Storage, incluyendo imágenes de previsualización y archivos de audio.",
      "challenge-one": "Lograr mostrar correctamente la duración de cada canción junto con su contador de reproducción fue un reto, ya que inicialmente no sabía cómo hacerlo. Lo resolví gracias a conceptos aprendidos en un video sobre manejo de audios y eventos en JavaScript.",
      "challenge-two": "El manejo de clases en JavaScript era algo nuevo para mí en ese momento, pero este proyecto me ayudó a mejorar mis conocimientos y a estructurar mejor el código con una programación más organizada y reutilizable."
    },
    "Project-UserRegister": {
      "subtitle": "User registration form with dynamic validations",
      "description": "User Register is an interactive registration form developed with pure JavaScript (Vanilla JS) and CSS, where the user completes their data step by step. As the form progresses, visual feedback is displayed at the top, guiding the user through the registration process. It includes strict validations that prevent progression until the set requirements are met, ensuring a smooth and functional user experience.",
      "objective": "Master form validation in pure JavaScript, learn how to manipulate the DOM effectively, and develop a reusable solution for future projects requiring a registration system.",
      "feature-one": "Navigation bar displaying completed and pending steps.",
      "feature-two": "Validation of a minimum number of characters allowed in the first form.",
      "feature-three": "Validation of completed fields before allowing progress to the next step.",
      "feature-four": "Email and phone number validation with a minimum of 10 digits.",
      "feature-five": "Functionality to show and hide the password.",
      "feature-six": "Option to reset the form if the user goes back or completes the registration.",
      "skill-one": "Advanced CSS styling techniques.",
      "skill-two": "Form validation without using frameworks.",
      "skill-three": "DOM manipulation in JavaScript to create a dynamic experience.",
      "challenge-one": "Initially, I didn’t know how to access the DOM to make the form dynamic. I solved it by manipulating the DOM with JavaScript.",
      "challenge-two": "Implementing the navigation bar was a challenge, as it required combined logic between JavaScript and CSS to correctly display the current step and indicate progress.",
      "challenge-three": "Making the buttons allow movement between sections without reloading the page was a challenge, but thanks to the combination of CSS and JavaScript, I achieved smooth navigation with forward and backward buttons."
    },
    "Project-ClothingStore": {
      "subtitle": "Clothing store design with React and Tailwind CSS",
      "description": "Clothing Store is a project focused on showcasing products in a clothing store, with an adaptive design and an intuitive interface. It includes a series of cards to display products, a side menu to switch sections, a top navigation bar to filter by clothing type, and a search bar. This project is centered around design and layout using React and Tailwind CSS.",
      "objective": "To practice responsive design and improve my skills in React and Tailwind CSS. Although this project has few interactive features, it was key to strengthening state management with useState and structuring an adaptable design.",
      "feature-one": "Cart menu with open and close functionality using state.",
      "feature-two": "Side navigation bar to switch sections.",
      "feature-three": "Grid design fully adapted to different screen sizes.",
      "skill-one": "Improving my skills in Tailwind CSS.",
      "skill-two": "Using the useState hook in React.",
      "skill-three": "Optimized responsive design.",
      "skill-four": "Familiarization with frameworks and tools like Vite for React.",
      "challenge-one": "Handling useState logic for cart interaction, as at that time I was still not fully proficient in state management in React.",
      "challenge-two": "Getting familiar with Tailwind CSS and improving its implementation in adaptive designs."
    },
    "Project-DesignYouTube": {
      "subtitle": "Clone of YouTube's home interface",
      "description": "Design YouTube was my second web design project using pure HTML and CSS, in which I replicated YouTube's home interface in its light theme. In addition to working on responsive design, I added a JavaScript functionality to open and close the sidebar.",
      "objective": "Strengthen my knowledge of the box model with HTML and CSS while implementing an interactive JavaScript functionality to manage the sidebar. This project allowed me to practice DOM manipulation, events, and conditional structures.",
      "feature-one": "Button to open and close the sidebar menu.",
      "feature-two": "Responsive design adaptable to different screen sizes.",
      "skill-one": "Handling CSS Grid and its properties.",
      "skill-two": "First interaction with JavaScript.",
      "skill-three": "DOM manipulation with JavaScript events.",
      "challenge-one": "This project took me approximately 10 days after watching a JavaScript course.",
      "challenge-two": "I initially had difficulties implementing the sidebar, but the documentation and my course notes helped me resolve it."
    },
    "Project-DesignFacebook": {
      "subtitle": "Clone of the classic Facebook login page",
      "description": "Design Facebook is a web design project in HTML and CSS that replicates the login interface of the classic version of Facebook. It was my first project after taking an HTML and CSS course, where I applied concepts of responsive design, box model, and Flexbox.",
      "objective": "To test my knowledge acquired in a web design course, focusing on responsive layout and the use of Flexbox. Additionally, I documented each step of the process over 8 days to reinforce my learning.",
      "feature-one": "Responsive design adaptable to different screen sizes.",
      "feature-two": "HTML and CSS organized into separate files.",
      "feature-three": "Use of media queries to improve adaptability.",
      "skill-one": "Responsive design.",
      "skill-two": "Handling the CSS box model.",
      "skill-three": "Use of Flexbox.",
      "skill-four": "Use of CSS cascade and class organization.",
      "challenge-one": "Since it was my first real project, it took me time to understand and correctly apply web design concepts.",
      "challenge-two": "I initially had difficulties with Flexbox and the box model structure, but I managed to solve them by documenting my process and learning from my mistakes."
    },
    "Project-MoneyTracking": {
      "subtitle": "Income and expense manager with dynamic charts",
      "description": "Money Tracking is a web application that allows managing income and expenses, displaying an updated balance and a detailed record of transactions. Additionally, it integrates an interactive chart that represents the available balance using the ECharts library. Developed with pure JavaScript, this project was an introduction to DOM manipulation, total and percentage calculations, and the use of external libraries.",
      "objective": "To create a financial control system with an income and expense balance, accompanied by a graphical visualization, to improve my skills in DOM handling, dynamic calculations in JavaScript, and the use of external libraries.",
      "feature-one": "Consumption of the ECharts chart library for balance visualization.",
      "feature-two": "Input for adding income and expenses.",
      "feature-three": "Dynamic calculation of available income.",
      "feature-four": "Calculation and visualization of total income and expenses.",
      "feature-five": "Button to delete income or expenses and automatically recalculate the balance.",
      "feature-six": "Record of the entire transaction history.",
      "skill-one": "First contact with DOM manipulation in JavaScript.",
      "skill-two": "Implementation of calculations to obtain totals and percentages.",
      "skill-three": "Use of the ECharts library for dynamic charts.",
      "skill-four": "Extraction of values from inputs and event handling in JavaScript.",
      "skill-five": "Modular code with separate JavaScript files.",
      "skill-six": "Working with classes in JavaScript for better code organization.",
      "challenge-one": "Ensuring that when deleting an income or expense, the balance calculations were correctly updated and reflected in the chart. I solved it by implementing a `cargaApp` function that centralizes all necessary functions and executes them each time there is a change.",
      "challenge-two": "Properly obtaining and managing input values to assign them as income or expenses. I achieved this by accessing the DOM along with events and logical operators within a specific function.",
      "challenge-three": "Since it was my first time using an external library, understanding its documentation and integrating it correctly with the balance values was a challenge. However, I managed to dynamically update the chart with each change and display the corresponding percentages."
    }
  }
}
